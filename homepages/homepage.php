<?php

function var_log($stuff) {
	error_log(var_export($stuff, true));
}

/**
 * Registers all of the standard Largo homepage layout classes
 */
function register_default_layouts() {
	include_once __DIR__ . '/functions.php';

	// Load layouts from `layouts/`
	$layouts = glob(__DIR__ . '/layouts/*.php');
	foreach ($layouts as $layout)
		include_once $layout;

	// Load zone components from `zones/`
	$zones = glob(__DIR__ . '/zones/*.php');
	foreach ($zones as $zone)
		include_once $zone;

	$default_layouts = array(
		'HomepageBlog',
		'HomepageSingle',
		'HomepageSingleWithFeatured',
		'HomepageSingleWithSeriesStories',
		'HomepageBigStoryWithSeries',
		'HomepageBigStoryWithSeriesAndFeatured',
		'TopStories',
		'Slider'
	);

	foreach ($default_layouts as $layout)
		register_homepage_layout($layout);
}
add_action('init', 'register_default_layouts', 0);

/**
 * Creates instance of a homepage layout class and renders it.
 */
function render_homepage_layout($layout) {
	$hp = new $layout();
	$hp->render();
}

/**
 * Uses `$largo_homepage_factory` to build a list of homepage layouts
 *
 * @return array An array of layouts, with friendly names as keys and arrays with 'path' and 'thumb' as values
 */
if (!function_exists('largo_get_home_layouts')) {

	function largo_get_home_layouts() {
		global $largo_homepage_factory;

		//$cache_key = 'largo_home_layouts_' . get_option( 'stylesheet' );
		//if ( false !== ( $layouts = get_transient( $cache_key ) ) ) {
			//return $layouts;
		//}

		$layouts = array();
		foreach ($largo_homepage_factory->layouts as $className => $layout) {
			$layouts[trim($layout->name)] = array(
				'path' => $className,
				'thumb' => largo_get_home_thumb($className),
				'desc' => $layout->description
			);
		}

		//set_transient( $cache_key, $layouts, HOUR_IN_SECONDS );
		return $layouts;
	}
}

/**
 * Retrieves the thumbnail image for a homepage template, or a default
 *
 * @return string The public url of the image file to use for the given template's screenshot
 */
function largo_get_home_thumb($className) {
	if (file_exists(get_template_directory() . '/homepages/assets/img/' . $className . '.png'))
		return get_template_directory_uri() . '/homepages/assets/img/' . $className . '.png';
	return get_template_directory_uri() . '/homepages/assets/img/no-thumb.png';
}

/**
 * Register the sidebars specified in the Home Template
 * TODO: This needs to be refactored to work with the new homepage layout setup.
 */
function largo_register_home_sidebars() {
	$path = largo_home_template_path();
	$sidebar_string = '';
	$template_data = implode('', file( $path ));
	preg_match( '|Sidebars:(.*)$|mi', $template_data, $sidebar_string );
	if ( count( $sidebar_string ) > 1 ) {
		$sidebars = explode("|", _cleanup_header_comment($sidebar_string[1]));
		foreach ( $sidebars as $sidebar ) {
			preg_match( '|^(.*?)(\((.*)\))?$|', trim( $sidebar ), $sb );
			register_sidebar( array(
				'name' => trim($sb[1]),
				'id' => largo_make_slug( trim($sb[1]) ),
				'description' => (isset( $sb[3] ) ) ? trim($sb[3]) : __('Auto-generated by current homepage template'),
				'before_widget' => '<aside id="%1$s" class="%2$s clearfix">',
				'after_widget' 	=> "</aside>",
				'before_title' 	=> '<h3 class="widgettitle">',
				'after_title' 	=> '</h3>',
			) );
		}
	}

	// while we're at it, set the $largo['home_rail'] value
	global $largo;
	$rail = $largo['home_rail'] = TRUE;
	preg_match( '|Right Rail:(.*)$|mi', $template_data, $rail );
	if ( count($rail) > 1 ) {
		$rail_val = _cleanup_header_comment($rail[1]);
		if ( stripos($rail_val, 'hidden') !== FALSE || stripos($rail_val, 'none') !== FALSE ) {
			$largo['home_rail'] = FALSE;
		}
	}
}
//add_action( 'widgets_init', 'largo_register_home_sidebars' );
