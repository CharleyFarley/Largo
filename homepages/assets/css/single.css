.clearfix {
  *zoom: 1;
}
.clearfix:before,
.clearfix:after {
  display: table;
  content: "";
}
.clearfix:after {
  clear: both;
}
.visuallyhidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}
.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
.input-block-level {
  display: block;
  width: 100%;
  min-height: 28px;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
}
#main,
.home-top {
  position: relative;
}
.home-top {
  float: left;
  width: 100%;
}
#view-format {
  position: absolute;
  top: 10px;
  right: 10px;
  color: white;
  text-shadow: 0 0 5px rgba(0, 0, 0, 0.6);
  z-index: 1;
}
#view-format * {
  margin-bottom: 0;
}
#view-format h1 {
  display: inline-block;
  font-size: 12px;
  text-transform: uppercase;
}
#view-format h1:after {
  content: ":";
}
#view-format ul {
  display: inline-block;
  margin: 0 0 0 0;
  padding: 0 0 0 0;
  font-size: 12px;
}
#view-format li {
  display: inline-block;
  border-right: 1px solid white;
  padding: 0 6px;
}
#view-format li:last-child {
  border-right: 0;
}
#view-format a {
  color: white;
  font-family: sans-serif;
}
#view-format .active {
  font-weight: bold;
}
.view-list #view-format {
  color: #666666;
  text-shadow: none;
}
.view-list #view-format a {
  color: inherit;
}
.home .full-hero {
  min-height: 400px;
}
.home .full-hero img {
  max-width: 1170px;
  width: 100%;
  margin: 0 auto;
  display: block;
}
.home .full-hero.one-third-width img {
  width: 34.1%;
  float: left;
}
.home .full-hero.two-third-width img {
  width: 68.2%;
  float: left;
}
#dark-top {
  margin-top: -28px;
  color: white;
  background-color: black;
  font-family: sans-serif;
}
#dark-top .side-featured h5.byline,
#dark-top .side-featured h5.top-tag,
#dark-top .side-featured h4 {
  margin: 0;
}
#dark-top .side-featured h4 {
  font-size: 18px;
}
#dark-top .side-featured h4 a {
  color: white;
}
#dark-top .side-featured h5 {
  font-size: 80%;
}
#dark-top .side-featured h5.byline {
  color: #dddddd;
}
#dark-top .side-featured article {
  border-top: solid 3px rgba(108, 185, 225, 0.5);
  padding: 10px 0;
}
#dark-top .side-featured article:first-child {
  border-top: 0 none;
}
#dark-top .side-series h3 {
  color: #6cb9e1;
  font-size: 100%;
  text-transform: uppercase;
  margin: 0;
}
#dark-top .side-series h3 a {
  color: #6cb9e1;
}
#dark-top .side-series h4 {
  font-size: 18px;
}
#dark-top .side-series h4 a {
  color: #fff;
}
#dark-top .side-series article {
  padding: 5px 0;
}
#dark-top .side-series .read-more {
  text-align: right;
  font-size: 80%;
}
#dark-top .side-series .read-more a {
  color: #6cb9e1;
}
#dark-top .span10 {
  background-color: rgba(0, 0, 0, 0.85);
  margin: 0 8.510638302%;
  padding: 25px 30px;
}
#dark-top article {
  margin-bottom: 0;
  border-bottom: none;
}
#dark-top p {
  font-size: 93%;
  line-height: 1.4em;
  margin-bottom: 0;
}
#dark-top h2 {
  font-size: 38px;
  line-height: 1.1em;
  margin-bottom: 0.3em;
}
#dark-top h5 {
  font-size: 100%;
}
#dark-top h5 a {
  color: #6cb9e1;
}
#dark-top h2 a {
  color: white;
}
#dark-top .byline,
#dark-top .byline a,
#dark-top section {
  color: #dddddd;
}
#dark-top .byline {
  font-weight: bold;
  font-size: 110%;
}
#dark-top .byline a {
  text-transform: uppercase;
}
#dark-top .span4 .top-tag {
  margin-bottom: 0.7em;
}
#dark-top .related-story {
  font-size: 18px;
  line-height: 1.2em;
  margin-left: 0.2em;
  margin-bottom: 1em;
}
#dark-top .related-story a {
  color: white;
}
#dark-top .more {
  text-align: right;
  margin-bottom: 0;
  font-weight: bold;
  font-size: 16px;
}
#dark-top .more a {
  color: #6cb9e1;
}
#dark-top .more a:after {
  content: " Â»";
}
#dark-top.overlay {
  background-color: transparent;
  margin-top: 0;
  position: absolute;
  bottom: 50px;
}
#home-secondary {
  position: relative;
}
#home-secondary > div {
  background-color: white;
  padding-bottom: 0;
  margin-top: 20px;
}
#home-secondary .row-fluid > [class*='span'] .widget {
  border: none;
}
#home-secondary .row-fluid > [class*='span']:last-child .widget {
  border-right: none;
}
#home-river {
  display: none;
}
#home-river header {
  *zoom: 1;
}
#home-river header:before,
#home-river header:after {
  display: table;
  content: "";
}
#home-river header:after {
  clear: both;
}
#home-river .hero {
  text-align: center;
  background-color: #eee;
}
#home-river .span10 {
  margin: 0 auto;
  float: none;
  position: relative;
}
#home-river .span10:before {
  height: 25px;
  background-color: white;
  position: absolute;
  top: -25px;
  left: -4%;
  right: -4%;
  content: " ";
}
@media screen and (max-width: 980px) {
  #dark-top.overlay {
    bottom: 15px;
  }
}
@media screen and (max-width: 768px) {
  #dark-top {
    position: relative !important;
    margin-top: -140px !important;
    bottom: auto !important;
  }
  #dark-top .span10 {
    width: 100%;
    margin: 0 auto;
  }
  #dark-top .row-fluid [class*='span'] {
    /*float: none;*/
    width: 100%;
    margin: 0;
  }
  #dark-top .span4 {
    margin-top: 30px !important;
  }
  #dark-top .related-story {
    margin-left: 0;
  }
  #dark-top.overlay {
    background-color: black;
  }
  #home-secondary .row-fluid > [class*='span'] {
    float: none;
    width: 100%;
    margin-left: 0;
  }
}
@media screen and (max-width: 480px) {
  .home .full-hero {
    min-height: 50px;
  }
  #dark-top {
    margin-top: -40px !important;
  }
  #dark-top .span10 {
    padding: 15px 18px !important;
  }
  #home-river {
    margin-top: 24px;
  }
  #home-river h1 {
    font-size: 36px;
    line-height: 1.1;
  }
  #view-format {
    width: 100%;
    right: 0;
    left: 0;
    text-align: center;
  }
}
/*# sourceMappingURL=data:application/json;base64, */